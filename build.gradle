// NOTE: The only changes that belong in this file are the definitions
// of tool versions (gradle plugin, compile SDK, build tools), so that
// Volley can be built via gradle as a standalone project.
//
// Any other changes to the build config belong in rules.gradle, which
// is used by projects that depend on Volley but define their own
// tools versions across all dependencies to ensure a consistent build.
//
// Most users should just add this line to settings.gradle:
//     include(":volley")
//
// If you have a more complicated Gradle setup you can choose to use
// this instead:
//     include(":volley")
//     project(':volley').buildFileName = 'rules.gradle'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.dcendents:android-maven-plugin:1.2'
        classpath 'com.android.tools.build:gradle:1.3.1'
    }
}

plugins {
    id "com.jfrog.bintray" version "1.0"
}

repositories {
    jcenter()
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.1'
}

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
import org.apache.tools.ant.filters.*

// Custom properties for shadowing the library
ext.tmp = "build/shadow"
ext.buildTmp = tmp + "/src/"
ext.oldpkg = "com.android.volley"
ext.newpkg = "com.mopub.volley"

repositories {
    jcenter()
}

android {
    compileSdkVersion 21
    buildToolsVersion '21.1.2'

    sourceSets {
        defaultConfig {
            minSdkVersion 21
            targetSdkVersion 21
            versionCode 1
            versionName "1.0"

            testApplicationId 'com.mopub.volley.tests'
        }

        main {
            assets.srcDirs       = ['assets']
            res.srcDirs          = ['res']
            aidl.srcDirs         = ['src']
            resources.srcDirs    = ['src']
            renderscript.srcDirs = ['src']
            // Compile java from the shadowed source location instead of the default.
            java.srcDirs         = [[buildTmp, 'java'].join(File.separator)]
            manifest.srcFile 'src/main/AndroidManifest.xml'
        }

        instrumentTest.setRoot('tests')
        instrumentTest.java.srcDirs = ['tests/src']
    }
}

def siteUrl = 'https://github.com/mopub/mopub-volley'
def gitUrl = 'https://github.com/mopub/mopub-volley.git'

group = 'com.mopub.volley'
version = '1.1.0'

// This task copies all source files to a temporary directory and renames
// all instances of the old package with the shadowed package name.
task renamePackages << {
    ext.replaceFilter = new TokenFilter.ReplaceString()
    replaceFilter.setFrom(oldpkg)
    replaceFilter.setTo(newpkg)
    copy {
        from('src/main')
        into(buildTmp)
        filter(TokenFilter, addReplaceString: replaceFilter)
    }
}

// Add a dependency to the javaCompile task on the shadowed source
// so that we can be sure the shadowed source is present.
android.libraryVariants.all { variant ->
    // Make sure we copy the packages into the tmp directory
    variant.javaCompile.dependsOn renamePackages
}

// On every release variant of the library project, create a task that
// produces a JAR of the compiled java.
android.libraryVariants.all { variant ->
  def name = variant.buildType.name
  if (name.equals(com.android.builder.core.BuilderConstants.DEBUG)) {
    return; // Skip debug builds.
  }
  def task = project.tasks.create "jar${name.capitalize()}", Jar
  task.dependsOn variant.javaCompile
  task.from variant.javaCompile.destinationDir
  artifacts.add('archives', task);
}

// Put your credentials (bintray.user, bintray.apikey) in your ~/.gradle/local.properties
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    publish = false

    pkg {
        repo = 'mopub-volley'
        userOrg = 'mopub'
        name = project.name
        desc = 'MoPub Volley'
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ['Apache-2.0']
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'jar'

                name 'MoPub Volley'
                url siteUrl

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'nathanshayefar'
                        name 'Nathan Shayefar'
                        email 'nshayefar@twitter.com'
                    }
                    developer {
                        id 'joeblubaugh'
                        name 'Joe Blubaugh'
                        email 'joeblubaugh@twitter.com'
                    }
                    developer {
                        id 'guydotcom'
                        name 'Steffan Chartrand'
                        email 'schartrand@twitter.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

apply from: 'rules.gradle'
apply from: 'bintray.gradle'
